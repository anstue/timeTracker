apply plugin: 'com.android.application'
apply plugin: 'checkstyle'
apply plugin: 'com.github.triplet.play'

def computeVersionName() {
    return versionName
}

def computeVersionCode() {
    return Integer.parseInt(versionCode)
}

android {
    compileSdkVersion 27
    playAccountConfigs {
        defaultAccountConfig {
            serviceAccountEmail = "$System.env.ACCOUNTEMAIL"
            jsonFile = file("$System.env.JSONFILE")
        }
    }
    defaultConfig {
        applicationId "com.ti_zero.com.apptime"
        minSdkVersion 24
        targetSdkVersion 27
        versionCode computeVersionCode()
        versionName computeVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        playAccountConfig = playAccountConfigs.defaultAccountConfig
    }
    play {
        track = 'alpha'
        untrackOld = true
    }
    signingConfigs {
        release {
            storeFile file("$System.env.STOREPATH")
            storePassword "$System.env.STOREPASSWORD"
            keyAlias "$System.env.KEYALIAS"
            keyPassword "$System.env.KEYPASSWORD"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-all:2.0.2-beta'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'

    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'android.arch.lifecycle:extensions:1.1.1';
    implementation 'android.arch.persistence.room:runtime:1.0.0';
    annotationProcessor 'android.arch.lifecycle:compiler:1.1.1';
    annotationProcessor 'android.arch.persistence.room:compiler:1.0.0';
}

task checkstyle(type: Checkstyle) {
    description 'Check code standard'
    group 'verification'
    configFile file("${project.rootDir}/tools/rules-checkstyle.xml")
    source fileTree('src/main/java')
    include '**/*.java'
    exclude '**/gen/**'

    classpath = files()
    showViolations true

    reports {
        xml.enabled = true
        html.enabled = true
        html.destination = "$project.buildDir/outputs/checkstyle/checkstyle.html"
    }
}
